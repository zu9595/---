{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"No.\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"댓글 수\")])], -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"td\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.boardList, (board, idx) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: idx,\n      onClick: $event => $options.goBoardInfo(board.no)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(board.no), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(board.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(board.writer), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(board.created_date), 1 /* TEXT */), _hoisted_3], 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","boardList","board","idx","key","onClick","$event","$options","goBoardInfo","no","_toDisplayString","title","writer","created_date","_hoisted_3"],"sources":["C:\\Users\\admin\\Desktop\\exam\\client\\src\\views\\BoardList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>No.</th>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>작성일자</th>\r\n                    <th>댓글 수</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(board, idx) in boardList\" :key=\"idx\" @click=\"goBoardInfo(board.no)\">\r\n                    <td>{{ board.no }}</td>\r\n                    <td>{{ board.title }}</td>\r\n                    <td>{{ board.writer }}</td>\r\n                    <td>{{ board.created_date }}</td>\r\n                    <td></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            boardList: []\r\n        }\r\n    },\r\n    created() {\r\n        this.getBoardList();\r\n    },\r\n    methods: {\r\n        async getBoardList() {\r\n            let result = await axios.get('/api/boards')\r\n                .catch(err => console.log(err));\r\n            let list = result.data;\r\n            this.boardList = list;\r\n        },\r\n        goBoardInfo(no) {\r\n            this.$router.put({ path: '/boards', query: { 'boardNo': no } });\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";gCAGYA,mBAAA,CAQQ,gB,aAPJA,mBAAA,CAMK,a,aALDA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,E;;gCASRA,mBAAA,CAAS;;uBAjBzBC,mBAAA,CAqBM,cApBFD,mBAAA,CAmBQ,gBAlBJE,UAQQ,EACRF,mBAAA,CAQQ,iB,kBAPJC,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANsBC,KAAA,CAAAC,SAAS,GAAxBC,KAAK,EAAEC,GAAG;yBAAtBP,mBAAA,CAMK;MANkCQ,GAAG,EAAED,GAAG;MAAGE,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACN,KAAK,CAACO,EAAE;QACzEd,mBAAA,CAAuB,YAAAe,gBAAA,CAAhBR,KAAK,CAACO,EAAE,kBACfd,mBAAA,CAA0B,YAAAe,gBAAA,CAAnBR,KAAK,CAACS,KAAK,kBAClBhB,mBAAA,CAA2B,YAAAe,gBAAA,CAApBR,KAAK,CAACU,MAAM,kBACnBjB,mBAAA,CAAiC,YAAAe,gBAAA,CAA1BR,KAAK,CAACW,YAAY,kBACzBC,UAAS,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}