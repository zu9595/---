{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"tr\", null, \"no.\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"tr\", null, \"제목\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"tr\", null, \"작성자\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"tr\", null, \"내용\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"tr\", null, \"작성일자\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", null, \"저장\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"tr\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.boardInfo.no = $event),\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.boardInfo.no]])]), _hoisted_2, _createElementVNode(\"tr\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.boardInfo.title = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.boardInfo.title]])]), _hoisted_3, _createElementVNode(\"tr\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.boardInfo.writer = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.boardInfo.writer]])]), _hoisted_4, _createElementVNode(\"tr\", null, [_withDirectives(_createElementVNode(\"textarea\", {\n    cols: \"30\",\n    rows: \"10\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.boardInfo.content = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.boardInfo.content]])]), _hoisted_5, _createElementVNode(\"tr\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.boardInfo.created_date = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.boardInfo.created_date]])]), _hoisted_6]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","$data","boardInfo","no","$event","readonly","_hoisted_2","title","_hoisted_3","writer","_hoisted_4","cols","rows","content","_hoisted_5","created_date","_hoisted_6"],"sources":["C:\\Users\\admin\\Desktop\\exam\\client\\src\\views\\NewBoardUpdate.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <tr>no.</tr>\r\n        <tr><input type=\"text\" v-model=\"boardInfo.no\" readonly></tr>\r\n        <tr>제목</tr>\r\n        <tr><input type=\"text\" v-model=\"boardInfo.title\"></tr>\r\n        <tr>작성자</tr>\r\n        <tr><input type=\"text\" v-model=\"boardInfo.writer\"></tr>\r\n        <tr>내용</tr>\r\n        <tr><textarea cols=\"30\" rows=\"10\" v-model=\"boardInfo.content\"></textarea></tr>\r\n        <tr>작성일자</tr>\r\n        <tr><input type=\"date\" v-model=\"boardInfo.created_date\"></tr>\r\n        <button>저장</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            boardInfo: {\r\n                no: \"\",\r\n                title: \"\",\r\n                writer: \"\",\r\n                content: null,\r\n                created_date: 0,\r\n                updated_date: null\r\n            },\r\n            searchMake: 0,\r\n            isUpdated: false\r\n        }\r\n    },\r\n    created() {\r\n        this.searchMake = this.$route.query.boardNo;\r\n        if(this.searchMake != 0 && this.searchMake != undefined){\r\n            this.getBoardInfo();\r\n        }else{\r\n            this.boardInfo.created_date = this.getToday();\r\n        }\r\n    },\r\n    methods: {\r\n        async getBoardInfo(){\r\n            let result = await axios.get(`/api/boards/${this.searchMake}`)\r\n                .catch(err => console.log(err));\r\n            let info = result.data;\r\n            info.created_date = this.getToday(info.created_date);\r\n\r\n            this.boardInfo = info;\r\n            this.isUpdated = true;\r\n        },\r\n        getToday(value){\r\n            let date = value == 0 ? new Date() : new Date(value);\r\n            let year = date.getFullYear();\r\n            let month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n            let day = ('0' + date.getDate()).slice(-2);\r\n            return `${year}-${month}-${day}`;\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";gCAEQA,mBAAA,CAAY,YAAR,KAAG;gCAEPA,mBAAA,CAAW,YAAP,IAAE;gCAENA,mBAAA,CAAY,YAAR,KAAG;gCAEPA,mBAAA,CAAW,YAAP,IAAE;gCAENA,mBAAA,CAAa,YAAT,MAAI;gCAERA,mBAAA,CAAmB,gBAAX,IAAE;;uBAXdC,mBAAA,CAYM,cAXFC,UAAY,EACZF,mBAAA,CAA4D,a,gBAAxDA,mBAAA,CAAmD;IAA5CG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,CAACC,EAAE,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAdJ,KAAA,CAAAC,SAAS,CAACC,EAAE,E,KAC5CG,UAAW,EACXT,mBAAA,CAAsD,a,gBAAlDA,mBAAA,CAA6C;IAAtCG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,CAACK,KAAK,GAAAH,MAAA;iDAAfH,KAAA,CAAAC,SAAS,CAACK,KAAK,E,KAC/CC,UAAY,EACZX,mBAAA,CAAuD,a,gBAAnDA,mBAAA,CAA8C;IAAvCG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,CAACO,MAAM,GAAAL,MAAA;iDAAhBH,KAAA,CAAAC,SAAS,CAACO,MAAM,E,KAChDC,UAAW,EACXb,mBAAA,CAA8E,a,gBAA1EA,mBAAA,CAAqE;IAA3Dc,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC,IAAI;+DAAUX,KAAA,CAAAC,SAAS,CAACW,OAAO,GAAAT,MAAA;iDAAjBH,KAAA,CAAAC,SAAS,CAACW,OAAO,E,KAC5DC,UAAa,EACbjB,mBAAA,CAA6D,a,gBAAzDA,mBAAA,CAAoD;IAA7CG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,CAACa,YAAY,GAAAX,MAAA;iDAAtBH,KAAA,CAAAC,SAAS,CAACa,YAAY,E,KACtDC,UAAmB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}